// import {propertyToType, typeFormatter} from '../util';

const HEADER: string = `/**\n * This file is automatically generated.\n * Do not modify this file, any changes will be overwritten.\n *\n * Generated ${new Date()}\n */\n\n`;

export function generateDaos(daoDirectory: string, openapi: any) {
  const schemas = openapi.components.schemas;
  const fs = require('fs');

  fs.mkdirSync(daoDirectory, { recursive: true });

  console.log(`Generating NestJS DAO objects to ${daoDirectory}:`);

  for(const dao of Object.keys(schemas)) {
    const isNoDao = schemas[dao]['x-no-dao'] ?? false;
    const daoSchema = schemas[dao]['x-schema'] ?? '';
    const description = schemas[dao].description.trim().replaceAll('\n', '\n * ') ?? '';

    if (isNoDao) {
      continue;
    }

    const daoName = `${dao}Dao`;
    const daoFilename = `${daoDirectory}/${dao}.dao.ts`;
    const daoHeader = HEADER;
    let daoBody = '';

    // Add header to the class definition
    daoBody += daoHeader;
    daoBody += `import { ${dao}Dto } from "../dto";\n`;
    daoBody += 'import { BaseDao } from "./BaseDao";\n\n';
    daoBody += `/**\n * ${dao} Data Access Object\n *\n * ${description}\n */\n`;
    daoBody += `export class ${daoName} extends BaseDao<${dao}Dto> {\n`;
    daoBody += '  constructor() {\n';
    daoBody += `    super('${(daoSchema ? daoSchema + '.' : '')}${pascalToSnake(initLower(dao))}');\n`;
    daoBody += '  }\n';
    daoBody += '}\n';

    fs.writeFileSync(daoFilename, daoBody, 'utf8');
    console.log(`  - Wrote ${daoFilename}`);
  }

  fs.copyFileSync('src/generator/nestjs/templates/BaseDao.ts', `${daoDirectory}/BaseDao.ts`);
  console.log(`  > Copied BaseDao.ts to ${daoDirectory}/BaseDao.ts`);

  fs.copyFileSync('src/generator/nestjs/templates/DaoUtils.ts', `${daoDirectory}/DaoUtils.ts`);
  console.log(`  > Copied DaoUtils.ts to ${daoDirectory}/DaoUtils.ts`);

  // Write index
  let indexBody = HEADER;
  const indexFilename = `${daoDirectory}/index.ts`;

  for(const dao of Object.keys(schemas)) {
    const isNoDao = schemas[dao]['x-no-dao'] ?? false;

    if (!isNoDao) {
      indexBody += `export * from './${dao}.dao';\n`;
    }
  }

  indexBody += "export * from './BaseDao';\n";
  indexBody += "export * from './DaoUtils';\n";

  fs.writeFileSync(indexFilename, indexBody, 'utf8');
  console.log(`  - Wrote ${indexFilename}`);
}

export function pascalToSnake(str: string): string {
  return str.replace(/([A-Z])/g, (match) => `_${match.toLowerCase()}`);
}

export function initLower(str: string): string {
  return str.charAt(0).toLowerCase() + str.slice(1);
}